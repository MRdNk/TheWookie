var Stream = require('stream')

function application (pgClient) {
  
  var client = new pgClient;
  client.connect();

  var queries = {
    select: 'SELECT * FROM applications'
  }

  return {
    select: select
  }

  function select (cb) {
    var query = queries.select
    if (typeof cb === 'function')
      return selectCallback(query, cb)
    else 
      return selectStream(query)
  }

  function selectStream (query) {

    var stream = new Stream()
    stream.writable = true

    var query = client.query(query)
    
    query.on ('row', function (data) {
      stream.emit('data', data);//JSON.stringify(data))
    })

    query.on ('end', function () {
      stream.emit('end')
      client.end ()
    })

    query.on ('error', function (err) {
      stream.emit('err', err)
      client.end ()
    })

    return stream
  }

  function selectCallback (query, cb) {
    client.query(query, function (err, data) {
      cb(err, data)
    })
  }

}

module.exports = application;